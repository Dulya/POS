{"version":3,"sources":["actions/orderActions.js","views/OrderListView.js","actions/orderitemActions.js","actions/itemActions.js","views/Modals.js","actions/modalActions.js","views/ModalContainer.js","views/OrderItemView.js","actions/userActions.js","views/LoginForm.js","views/Nav.js","reducers/userReducer.js","reducers/orderReducer.js","reducers/orderitemReducer.js","reducers/itemReducer.js","reducers/modalReducer.js","views/Main.js","serviceWorker.js","index.js"],"names":["RETRIVED_ORDERS_BY_USER","dateFormat","require","OrderListView","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentPage","rowsPerPage","isFilter","clickedFilter","handleRowClick","bind","assertThisInitialized","handleFilterOrders","_this2","onRetrieveOrders","catch","error","history","push","e","setState","target","value","order_id","showTable","_this3","filterdOrders","orders","filter","order","status","react_default","a","createElement","className","onChange","id","scope","map","index","key","onClick","created_date","total_amount","React","Component","mapActionsToProps","dispatch","axios","get","then","type","payload","data","connect","user","RETRIEVED_ORDER_ITEMS","UPDATED_ORDER_ITEM","DELETED_ORDER_ITEM","ADDED_ORDER_ITEM","RetrieveItemsByOrderId","url","RETRIVED_ITEMS","ItemCartModal","currentTab","itemsInOrder","handleAddItem","openTab","onRetrieveItems","console","log","orderitems","items","item","item_id","onAddOrderItem","filterdItems","category","toLowerCase","aria-label","closeModal","item_name","src","alt","price","indexOf","defaultValue","quantity","orderitem","post","res","err","OPEN_MODAL","HIDE_MODAL","HideModal","MODAL_TYPES","itemCart","ReactModal","defaultStyles","content","width","height","margin","padding","overflow","ModalContainer","open","SpecifiedModal","lib_default","isOpen","onRequestClose","hideModal","contentLabel","ariaHideApp","title","objectSpread","modal","OrderItemView","updateValue","updateQuantity","deleteCartItem","handlePagination","handleOpenModal","onRetrievOrderItems","match","params","defineProperty","name","orderitem_id","onUpdateOrderItem","onDeleteOrderItem","render","event","Number","onOpenModal","_this4","_this$state","indexOfLastRow","indexOfFirstRow","currentRows","slice","pageNumbers","i","Math","ceil","length","renderPageNumbers","number","views_ModalContainer","placeholder","required","min","max","updatedOrderItem","put","delete","VALIDATE_USER","validateUserDetails","LoginForm","_React$Component","user_name","password","updateUsername","updatePassword","handleSubmit","inherits","createClass","afterValidateUser","preventDefault","loginUser","LoginFormContainer","Nav","onValidateUser","withRouter","initialState","user_type","isFetched","isFetchedItems","isUpdated","isDeleted","isAdded","message","middleware","applyMiddleware","thunk","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","allReducers","combineReducers","arguments","undefined","action","_ref","newDeleteState","assign","newAddState","store","createStore","Main","es","BrowserRouter","views_Nav","Route","exact","component","OrderView","path","Boolean","location","hostname","ReactDOM","views_Main","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ce7ae48.chunk.js","sourcesContent":["import axios from 'axios';\nexport const RETRIVED_ORDERS_BY_USER = 'orders:retrievedOrdersByUser';\n\nexport default function RetrieveOrdersByUserName() {\n    return (dispatch) => {\n        const url = '/api/order/user';\n        return axios.get(url)\n            .then(orders => {\n                dispatch({\n                    type: RETRIVED_ORDERS_BY_USER,\n                    payload: orders.data\n                });\n                return orders;\n            })\n    }\n}\n\n\n\n\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport RetrieveOrdersByUserName from '../actions/orderActions';\n\nvar dateFormat = require('dateformat');\n\nclass OrderListView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: 1,\n            rowsPerPage: 5,\n            isFilter: false,\n            clickedFilter: 'all'\n        }\n        this.handleRowClick = this.handleRowClick.bind(this);\n        this.handleFilterOrders = this.handleFilterOrders.bind(this);\n    }\n\n\n    componentDidMount() {\n        const { onRetrieveOrders } = this.props;\n        onRetrieveOrders().catch((error) => {\n            this.props.history.push('/login');\n        });\n    }\n\n    handleFilterOrders(e) {\n        this.setState({\n            isFilter: true,\n            clickedFilter: e.target.value\n        });\n    }\n\n    handleRowClick(order_id) {\n        this.setState({\n            showTable: true\n        });\n        this.props.history.push(\"/order/\" + order_id);\n    }\n\n\n    render() {\n        let filterdOrders = this.props.orders;\n        if (this.state.isFilter) {\n            if (this.state.clickedFilter === 'all') {\n                filterdOrders = this.props.orders;\n            } else {\n                filterdOrders = this.props.orders.filter(order => order.status === this.state.clickedFilter);\n            }\n\n        }\n        return (\n            <div>\n                <div className=\"orderlist-wrapper\">\n                    <select className=\"order-filter\" onChange={e => this.handleFilterOrders(e)}>\n                        <option value=\"\">Filter order by status</option>\n                        <option value=\"all\">All</option>\n                        <option value=\"open\">Open</option>\n                        <option value=\"close\">Closed</option>\n                    </select>\n                    <table id=\"order-table\" className=\"table table-hover table table-bordered \">\n                        <thead className=\"black white-text\">\n                            <tr className=\"table_row\">\n                                <th className=\"table_cell\" scope=\"col\"></th>\n                                <th className=\"table_cell\" scope=\"col\">Order ID</th>\n                                <th className=\"table_cell\" scope=\"col\">Creation Date</th>\n                                <th className=\"table_cell\" scope=\"col\">Status</th>\n                                <th className=\"table_cell\" scope=\"col\">Total Amount</th>\n                            </tr>\n                        </thead>\n                        <tbody >\n                            {filterdOrders.map((order, index) =>\n                                <tr className=\"table_row\" key={index} onClick={() => this.handleRowClick(order.order_id)}>\n                                    <th className=\"table_cell\" scope=\"col\">\n                                        <div >\n                                            <label> {index + 1}</label>\n                                        </div>\n                                    </th>\n                                    <td className=\"table_cell\">{order.order_id}</td>\n                                    <td className=\"table_cell\">{dateFormat(order.created_date, \"dddd, mmmm dS, yyyy\")}</td>\n                                    <td className=\"table_cell\">{order.status}</td>\n                                    <td className=\"table_cell\">{order.total_amount}</td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n        orders: state.orders.data\n    }\n}\n\nconst mapActionsToProps = {\n    onRetrieveOrders: RetrieveOrdersByUserName,\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(OrderListView);\n","import axios from 'axios';\nexport const RETRIEVED_ORDER_ITEMS = 'orders:retrievedOrderitems';\nexport const UPDATED_ORDER_ITEM = 'orders:updatedOrderitem';\nexport const DELETED_ORDER_ITEM = 'orders:deletedOrderitem';\nexport const ADDED_ORDER_ITEM = 'orders:addedOrderitem';\n\nexport default function RetrieveItemsByOrderId(order_id) {\n    return (dispatch) => {\n        const url = \"/api/order/id/\" + order_id;\n        return axios.get(url)\n            .then(order => {\n                dispatch({\n                    type: RETRIEVED_ORDER_ITEMS,\n                    payload: order.data\n                })\n                return order;\n            })\n    }\n}\n\nexport function UpdateOrderItem(updatedOrderItem) {\n    return (dispatch) => {\n        return axios.put(\"/api/orderitem\", updatedOrderItem)\n            .then(res => {\n                dispatch({\n                    type: UPDATED_ORDER_ITEM,\n                    payload: res.data\n                })\n            })\n    }\n}\n\nexport function DeleteOrderItem(orderitem_id) {\n    return (dispatch) => {\n        return axios.delete(\"/api/orderitem/\" + orderitem_id)\n            .then(res => {\n                dispatch({\n                    type: DELETED_ORDER_ITEM,\n                    payload: orderitem_id\n                })\n            })\n    }\n}\n\nexport function AddOrderItem(order_id, item_id, quantity) {\n    const orderitem = {\n        order_id: order_id,\n        item_id: item_id,\n        quantity: quantity\n    }\n    return (dispatch) => {\n        return axios.post(\"/api/orderitem\", orderitem)\n            .then(res => {\n                dispatch(RetrieveItemsByOrderId(order_id));\n            })\n            .catch(err => {\n                console.log(\"Error\", err);\n            });\n    }\n}\n\n","import axios from 'axios';\nexport const RETRIVED_ITEMS = 'items:retrievedItems';\n\nexport default function RetrieveItems() {\n    return (dispatch) => {\n        const url = '/api/item';\n        return axios.get(url)\n            .then(items => {\n                dispatch({\n                    type: RETRIVED_ITEMS,\n                    payload: items.data\n                });\n                return items;\n            })\n    }\n}\n\n","import React from 'react'\nimport RetrieveItems from '../actions/itemActions';\nimport { connect } from 'react-redux';\nimport { AddOrderItem } from '../actions/orderitemActions';\n\n\nclass ItemCartModal extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTab: 'pizza',\n      itemsInOrder: []\n\n    }\n    this.handleAddItem = this.handleAddItem.bind(this);\n    this.openTab = this.openTab.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onRetrieveItems()\n      .catch((error) => {\n        console.log(\"Error : \", error);\n      });\n    this.setState({\n      itemsInOrder: this.props.orderitems.items.map(item => item.item_id)\n    });\n  }\n\n  handleAddItem(e, item_id) {\n    this.props.onAddOrderItem(this.props.orderitems.order_id, item_id, e.target.value);\n  }\n\n  openTab(e) {\n    this.setState({\n      currentTab: e.target.value\n    });\n  }\n\n\n  render() {\n    console.log(\"item.category\", this.state.currentTab);\n    let categories = ['pizza', 'pasta', 'appetizer', 'beverages'];\n    //let category_img_source=['3225463','3543612','2234763','3128357'];\n    let itemsInOrder = this.state.itemsInOrder;\n    let filterdItems = this.props.items.filter(item => item.category.toLowerCase() === this.state.currentTab);\n\n    return (\n      <div>\n        <div >\n          <button type=\"button\" id=\"close-btn\" className=\"close\" aria-label=\"Close\" onClick={this.props.closeModal}> Close\n          </button>\n        </div>\n        <div id=\"container\">\n          <div id=\"tabs\">\n            {categories.map((category, index) =>\n              <button id=\"tabButton\" key={index} value={category} onClick={e => this.openTab(e)} >{category}</button>\n            )}\n          </div>\n          <div id=\"content\">\n            <div className=\"itemlist-wrapper\">\n              {filterdItems.map((item, index) =>\n                <div className=\"card-wrapper\" key={index}>\n                  <div className=\"card\">\n                    <div className=\"card-container\">\n                      <h5><b>{item.item_name}</b></h5>\n                      <img src=\"https://source.unsplash.com/collection/3225463/200x100\" alt=\"food-logo\"></img>\n                    </div>\n                  </div>\n\n                  <div className=\"detail-panel\">\n                    <div className=\"h-row\">\n                      <label >{item.item_name} </label>\n                    </div>\n                    <div className=\"h-row\">\n                      <label >RS. {item.price} </label>\n                    </div>\n                    <div className=\"h-row\">\n                      {itemsInOrder.indexOf(item.item_id) > -1 ? \"Already added\" :\n                        <div>\n                          <p>  <input id=\"data-input\" type=\"number\" defaultValue={0} onChange={e => this.handleAddItem(e, item.item_id)}></input></p>\n                        </div>}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    items: state.items.data,\n    orderitems: state.orderitems\n  }\n}\n\nconst mapActionsToProps = {\n  onRetrieveItems: RetrieveItems,\n  onAddOrderItem: AddOrderItem\n}\nexport default connect(mapStateToProps, mapActionsToProps)(ItemCartModal)\n\n//<input className=\"input_quantity\" placeholder=\"Enter order Qty\" required type=\"number\" min=\"0\" max=\"100\" defaultValue={1} />\n//<button className=\"toggle-button\" htmlFor=\"check\"><i className=\"fa fa-cart-plus\" id=\"addcart-icon\"></i></button>\n\n/*<div className=\"detail-footer\">\n                <button className=\"add_item_btn\"><i className=\"fa fa-cart-plus\" ></i></button>\n              </div>*/\n\n/*\n<div className=\"add-item-panel\" style={this.state.isClicked ?{ visibility: 'visible' } :{visibility:'hidden'} }>\n            <div className=\"item-image\">\n              <img alt=\"item-image\" />\n            </div>\n            <div id=\"container\">\n              <div id=\"label-div\">Item Id : </div>\n              <div id=\"data-div\">{this.state.clicked_item.item_id}</div>\n            </div>\n            <div id=\"container\">\n              <div id=\"label-div\">Item Name : </div>\n              <div id=\"data-div\">{this.state.clicked_item.item_name}</div>\n            </div>\n\n            <div id=\"container\">\n              <div id=\"label-div\">Unit Price : </div>\n              <div id=\"data-div\">{this.state.clicked_item.price}</div>\n            </div>\n\n            <div id=\"container\">\n              <div id=\"label-div\">Quantity : </div>\n              <input id=\"data-input\" type=\"number\" defaultValue={0} onChange={e=>this.handleAddItem(e,this.state.clicked_item.item_id)}></input>\n            </div>\n          </div> */","export const OPEN_MODAL = 'modal:openModal';\nexport const HIDE_MODAL = 'modal:hideModal';\n\n\nexport function OpenModal(type, title, items) {\n    return (dispatch) => {\n        return dispatch({\n            type: OPEN_MODAL,\n            payload: { type, title, items, open: true }\n        });\n    }\n}\n\nexport function HideModal() {\n    return (dispatch) => {\n        return dispatch({\n            type: HIDE_MODAL,\n        });\n    }\n}\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ReactModal from 'react-modal';\nimport ItemCartModal from './Modals'\nimport { HideModal } from '../actions/modalActions'\n\nconst mapStateToProps = state => {\n    return {\n        ...state.modal\n    }\n}\n\nconst MODAL_TYPES = {\n    'itemCart': ItemCartModal\n}\n\nReactModal.defaultStyles.content.width = '900px';\nReactModal.defaultStyles.content.height = '800px';\nReactModal.defaultStyles.content.margin = 'auto';\nReactModal.defaultStyles.content.padding = '30px';\nReactModal.defaultStyles.content.overflow = 'hidden';\n\nclass ModalContainer extends React.Component {\n\n    render() {\n        console.log(\"Modal props\", this.props);\n        if (!this.props.type || !this.props.open) {\n            return null\n        }\n\n        const SpecifiedModal = MODAL_TYPES[this.props.type];\n\n        return (\n            <div>\n                <ReactModal\n                    isOpen={this.props.open}\n                    onRequestClose={this.props.hideModal}\n                    contentLabel=\"Example Modal\"\n                    ariaHideApp={false}\n                >\n                    <SpecifiedModal\n                        closeModal={this.props.hideModal} title={this.props.title} items={this.props.items}\n                    />\n                </ReactModal>\n            </div>\n        )\n    }\n}\n\nconst mapActionsToProps = {\n    hideModal: HideModal,\n};\n\nexport default connect(mapStateToProps, mapActionsToProps)(ModalContainer)\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport RetrieveItemsByOrderId from '../actions/orderitemActions';\nimport ModalContainer from './ModalContainer';\nimport { OpenModal, HideModal } from '../actions/modalActions';\nimport { UpdateOrderItem, DeleteOrderItem } from '../actions/orderitemActions';\n\n\nvar dateFormat = require('dateformat');\n\nclass OrderItemView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: 1,\n            rowsPerPage: 10,\n            updateValue: 0,\n\n        }\n        this.updateQuantity = this.updateQuantity.bind(this);\n        this.deleteCartItem = this.deleteCartItem.bind(this);\n        this.handlePagination = this.handlePagination.bind(this);\n        this.handleOpenModal = this.handleOpenModal.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.onRetrievOrderItems(this.props.match.params.id)\n            .catch((error) => {\n                console.log(\"Error : \", error);\n            });\n    }\n\n    updateQuantity(e, id) {\n        this.setState({\n            [e.target.name]: [e.target.value]\n        });\n        this.props.orderitems.items.map((item, index) => {\n            if (item.orderitem_id === id) {\n                this.props.orderitems.items[index].quantity = e.target.value;\n                this.props.onUpdateOrderItem(this.props.orderitems.items[index])\n                    .catch(err => {\n                        console.log(\"Error : \", err);\n                    });\n            }\n        });\n    }\n\n    deleteCartItem(e, id) {\n        this.props.orderitems.items.map((item, index) => {\n            this.props.onDeleteOrderItem(id)\n                .then(res => {\n                    this.render();\n                })\n                .catch(err => {\n                    console.log(\"Error : \", err);\n                });\n        });\n    }\n\n    handlePagination(event) {\n        this.setState({\n            currentPage: Number(event.target.id)\n        });\n    }\n\n    handleOpenModal(event) {\n        this.props.onOpenModal('itemCart', 'ItemCart Modal', this.props.items);\n    }\n\n    render() {\n        const { currentPage, rowsPerPage } = this.state;\n        const items = this.props.orderitems.items;\n        const indexOfLastRow = currentPage * rowsPerPage;\n        const indexOfFirstRow = indexOfLastRow - rowsPerPage;\n        const currentRows = items.slice(indexOfFirstRow, indexOfLastRow);\n\n        // Logic for displaying page numbers\n        const pageNumbers = [];\n        for (let i = 1; i <= Math.ceil(items.length / rowsPerPage); i++) {\n            pageNumbers.push(i);\n        }\n\n        const renderPageNumbers = pageNumbers.map(number => {\n            return (\n                <li\n                    key={number}\n                    id={number}\n                    onClick={this.handlePagination}\n                >\n                    {number}\n                </li>\n            );\n        });\n\n        return (\n            <div>\n                <ModalContainer />\n                <div>\n                    <div className=\"order-wrapper\">\n                        <table id=\"table-order\" className=\"table table-default \">\n                            <thead className=\"black white-text\">\n                                <tr className=\"table_row\">\n                                    <th className=\"table_cell\" scope=\"col\"><label className=\"th-label\">Order ID</label> </th>\n                                    <th className=\"table_cell\" scope=\"col\"><label className=\"th-label\">Creation Date </label> </th>\n                                    <th className=\"table_cell\" scope=\"col\"><label className=\"th-label\">Status </label></th>\n                                    <th className=\"table_cell\" scope=\"col\"><label className=\"th-label\">Total Amount </label></th>\n                                </tr>\n                            </thead>\n                            <tbody >\n                                <tr className=\"table_row\" >\n                                    <td className=\"table_cell\">{this.props.orderitems.order_id}</td>\n                                    <td className=\"table_cell\">{dateFormat(this.props.orderitems.created_date, \"dddd, mmmm dS, yyyy\")}</td>\n                                    <td className=\"table_cell\">{this.props.orderitems.status}</td>\n                                    <td className=\"table_cell\">{this.props.orderitems.total_amount}</td>\n                                </tr>\n\n                            </tbody>\n                        </table>\n                    </div>\n\n                    <div className=\"orderdetail-wrapper\">\n                        <div className=\"orderdetail-header\">\n                            <button className=\"add_cart_btn\" onClick={this.handleOpenModal}><i className=\"fa fa-cart-plus\" ></i> Add to Order</button>\n                        </div>\n\n                        <table id=\"table-cart\" className=\"table table-hover table table-bordered\">\n                            <thead className=\"black white-text\">\n                                <tr className=\"table_row\">\n                                    <th className=\"table_cell\" scope=\"col\"></th>\n                                    <th className=\"table_cell\" scope=\"col\">Item Name</th>\n                                    <th className=\"table_cell\" scope=\"col\">Quantity</th>\n                                    <th className=\"table_cell\" scope=\"col\">Unit Price</th>\n                                </tr>\n                            </thead>\n                            <tbody >\n                                {currentRows.map((orderitem, index) =>\n                                    <tr className=\"table_row\" key={index}>\n                                        <td className=\"table_cell\">{index + 1}</td>\n                                        <td className=\"table_cell\">{orderitem.item_name}</td>\n                                        <td className=\"table_cell\"><input className=\"input_spinner\" name={'input' + orderitem.orderitem_id} placeholder=\"Enter a number\" value={orderitem.quantity} required type=\"number\" min=\"0\" max=\"100\" onChange={e => this.updateQuantity(e, orderitem.orderitem_id)} /></td>\n                                        <td className=\"table_cell\">{orderitem.price}</td>\n                                        <td className=\"table_cell\"><button className=\"remove_btn\" onClick={e => this.deleteCartItem(e, orderitem.orderitem_id)}><i className=\"fa fa-trash\"></i> </button></td>\n                                    </tr>\n                                )}\n                            </tbody>\n                        </table>\n                        <ul id=\"page-numbers\">\n                            {renderPageNumbers}\n                        </ul>\n                    </div>\n                </div>\n\n                }\n            </div>\n        );\n\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        orderitems: state.orderitems,\n        modal: state.modal,\n        items: state.items\n    }\n}\n\nconst mapActionsToProps = {\n    onRetrievOrderItems: RetrieveItemsByOrderId,\n    hideModal: HideModal,\n    onOpenModal: OpenModal,\n    onUpdateOrderItem: UpdateOrderItem,\n    onDeleteOrderItem: DeleteOrderItem\n}\n\nexport default connect(mapStateToProps, mapActionsToProps)(OrderItemView);\n","import axios from 'axios';\nexport const VALIDATE_USER = 'users:validateUser';\n\n\nexport function validateUserDetails() {\n    return (dispatch) => {  \n        return axios.get('/api/session')\n            .then(user => {\n                console.log(\"this is user :\",user.data);\n                dispatch({\n                    type: VALIDATE_USER,\n                    payload: user.data\n                });\n                return user;\n            })\n    }\n} \n\nexport function loginUser(user_name, password) {\n    return (dispatch) => {\n        return axios.post('/user/login', {user_name, password})\n            .then(user => {\n                dispatch({\n                    type: VALIDATE_USER,\n                    payload: user.data\n                });\n            })\n            .catch(err => {\n                console.log(\"Error Log In. Please Try Again.\", err);\n            });\n    }\n}","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { loginUser, validateUserDetails } from \"../actions/userActions\";\n\nexport class LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user_name: \"\",\n            password: \"\",\n        };\n        this.updateUsername = this.updateUsername.bind(this);\n        this.updatePassword = this.updatePassword.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    componentDidMount() {\n        this.props.afterValidateUser()\n            .then(() => {\n                this.props.history.push('/orders');\n            });\n    }\n\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.props.loginUser(this.state.user_name, this.state.password).then((res) => {\n            this.props.history.push(\"/orders\");\n        });\n    }\n\n    updateUsername(e) {\n        e.preventDefault();\n        this.setState({ user_name: e.target.value })\n    }\n\n    updatePassword(e) {\n        e.preventDefault();\n        this.setState({ password: e.target.value })\n    }\n\n    render() {\n        return (\n\n            <div className=\"outer-wrapper\">\n                <div className=\"outer-box\">\n                    <div className=\"header\">\n                        Sign In\n                    </div>\n                    <div className=\"inner-box\">\n                        <form id=\"loginSubmissionForm\" >\n                            <div className=\"form-group\">\n                                <label>User Name  </label>\n                                <input id=\"userinput\" name=\"username\" className=\"input-group-text\" type=\"text\" value={this.state.user_name || ''} onChange={this.updateUsername} />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label>Password  </label>\n                                <input id=\"password\" name=\"password\" className=\"input-group-text\" type=\"password\" value={this.state.password || ''} onChange={this.updatePassword} />\n\n                            </div>\n                            <input id=\"submit-button\" type=\"submit\" value=\"Sign In\" className=\"btn btn-info\" onClick={this.handleSubmit}/>\n\n                        </form>\n                        {this.props.user}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapActionsToProps = {\n    loginUser: loginUser,\n    afterValidateUser: validateUserDetails\n}\n\nconst LoginFormContainer=connect(null, mapActionsToProps)(LoginForm);\nexport default LoginFormContainer;\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport '../css/header.css';\nimport { validateUserDetails } from '../actions/userActions';\nimport { withRouter } from \"react-router-dom\";\n\nclass Nav extends React.Component {\n\n    componentDidMount() {\n        this.props.onValidateUser()\n            .catch(err => {\n                this.props.history.push('/login');\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"navbar\">\n                <p>POS</p>\n\n                {this.props.user.user_name !== \"\" &&\n                    <div className=\"user-panel\">\n                        <div className=\"user_icon_div\" >\n                            <i className=\"glyphicon glyphicon-user\" id=\"user_icon\"></i>\n                        </div>\n                        <div className=\"user_Label\">\n                            {this.props.user.user_name}\n                        </div></div>}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        user: state.user,\n    }\n}\n\nconst mapActionsToProps = {\n    onValidateUser: validateUserDetails,\n}\n\nexport default withRouter(connect(mapStateToProps, mapActionsToProps)(Nav));\n","import { VALIDATE_USER } from '../actions/userActions';\n\nconst initialState = {\n    user_name: \"\",\n    user_type: \"\"\n}\n\nexport default function userReducer(state = initialState, action) {\n    switch (action.type) {\n        case VALIDATE_USER: return action.payload;\n        default: return state;\n    }\n}\n\n\n","import { RETRIVED_ORDERS_BY_USER } from '../actions/orderActions';\n\nconst initialState = {\n    isFetched: true,\n    data: []\n};\n\nexport default function orderReducer(state = initialState, { type, payload }) {\n    switch (type) {\n        case RETRIVED_ORDERS_BY_USER: return { ...initialState, isFetched: true, data: payload };\n        default: return state;\n    }\n}\n\n\n\n","import { RETRIEVED_ORDER_ITEMS } from '../actions/orderitemActions';\nimport { UPDATED_ORDER_ITEM } from '../actions/orderitemActions';\nimport { DELETED_ORDER_ITEM } from '../actions/orderitemActions';\nimport { ADDED_ORDER_ITEM } from '../actions/orderitemActions';\n\nconst initialState = {\n    isFetchedItems: false,\n    isUpdated: false,\n    isDeleted: false,\n    isAdded: false,\n    order_id: \"\",\n    created_date: \"\",\n    status: '',\n    items: []\n}\n\nexport default function orderitemReducer(state = initialState, { type, payload }) {\n    switch (type) {\n        case RETRIEVED_ORDER_ITEMS: return { ...state, isFetched: true, ...payload };\n        case UPDATED_ORDER_ITEM: return { ...state, isUpdated: true, ...payload};\n        case DELETED_ORDER_ITEM:\n            const newDeleteState = Object.assign({}, state);\n            newDeleteState.items = newDeleteState.items.filter(item => item.orderitem_id !== payload);\n            return { ...newDeleteState, isDeleted: true };\n        case ADDED_ORDER_ITEM:\n            const newAddState = Object.assign({}, state);\n            newAddState.items.push(payload.items);\n            return {...newAddState,isAdded:true,...payload};\n        default: return state;\n    }\n}","import { RETRIVED_ITEMS } from '../actions/itemActions';\n\nconst initialState = {\n    isFetchedItems: false,\n    data: []\n};\n\nexport default function itemReducer(state = initialState, { type, payload }) {\n    switch (type) {\n        case RETRIVED_ITEMS: return { ...state, isFetchedItems: true, data: payload };\n        default: return state;\n    }\n}","import { OPEN_MODAL } from '../actions/modalActions';\nimport { HIDE_MODAL } from '../actions/modalActions';\n\nconst initialState = {\n    type: null,\n    open: false,\n    title: '',\n    message: ''\n  }\n\nexport default function modalReducer(state = [], action) {\n    switch (action.type) {\n        case OPEN_MODAL: return {\n            ...initialState,\n            ...action.payload\n        };\n        case HIDE_MODAL: return initialState;\n        default:return state;\n    }\n}","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport OrderView from '../views/OrderListView';\nimport OrderItemView from '../views/OrderItemView';\nimport LoginForm from '../views/LoginForm';\nimport ModalContainer from '../views/ModalContainer';\nimport Nav from '../views/Nav';\nimport { applyMiddleware, createStore, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport userReducer from '../reducers/userReducer';\nimport orderReducer from '../reducers/orderReducer';\nimport orderitemReducer from '../reducers/orderitemReducer';\nimport itemReducer from '../reducers/itemReducer';\nimport modalReducer from '../reducers/modalReducer';\n\nconst middleware = applyMiddleware(thunk);\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst allReducers = combineReducers({\n    user: userReducer,\n    orders: orderReducer,\n    orderitems: orderitemReducer,\n    items: itemReducer,\n    modal: modalReducer\n});\n\nconst store = createStore(allReducers, composeEnhancer(middleware));\n\nclass Main extends React.Component {\n\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div>\n                        <Nav />\n                        <div className=\"content\">\n                            <Route exact component={OrderView} path=\"/\" />\n                            <Route component={LoginForm} path=\"/login\" />\n                            <Route component={OrderView} path=\"/orders\" />\n                            <Route component={OrderItemView} path=\"/order/:id\" />\n                            <Route component={ModalContainer} path=\"/modal\" />\n\n                        </div>\n                    </div>\n                </BrowserRouter >\n            </Provider>\n        );\n    }\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport './css/LoginForm.css';\nimport './css/OrderListView.css';\nimport './css/cardPanel.css';\nimport './css/header.css';\nimport Main from './views/Main';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\nReactDOM.render(\n    <Main />\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n"],"sourceRoot":""}